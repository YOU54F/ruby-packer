name: macOS
on:
  push:
    branches: [ master, ci_test  ]
  pull_request:
    branches: [ master, ci_test  ]
  workflow_dispatch:
env:
  REPO: you54f/ruby-packer
  PKG_DATE: 20230812
  NEXT_TAG: rel-$PKG_DATE
  PUBLISH_BRANCH: ci_test
jobs:
  make:
    strategy:
      matrix:
        os: [macos-11]
        # os: [macos-latest]
        # ruby: ['2.4','2.6','2.7', '3.0', '3.1', '3.2']
        ruby: ['3.2']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: "[Enclose.IO] Install dependencies"
        run: |
          brew install squashfs automake bison openssl@1.1
          echo "$(brew --prefix bison)/bin" >>$GITHUB_PATH
          echo "$(brew --prefix openssl@1.1)/bin" >>$GITHUB_PATH
      - name: "[Enclose.IO] Check dependencies"
        run: |
          sw_vers
          uname -a
          uname -p
          uname -m
          sysctl -n machdep.cpu.brand_string
          which mksquashfs
          mksquashfs -version
      - name: "[Enclose.IO] Set up Ruby"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: "[Enclose.IO] Install rubocop"
        run: gem install rubocop
      - name: "[Enclose.IO] Run rubocop"
        run: rubocop
      # - name: "[Enclose.IO] Install dependencies"
      #   run: bundle install
      # - name: "[Enclose.IO] Rake"
      #   run: bundle exec rake
      # - name: "[Enclose.IO] Rake"
      #   run: bundle exec rake
      - name: "Download and Patch ruby source"
        run: ./patch_ruby_source.sh
      - name: "Unlink openssl" # this is unlinked after downloading the patch as curl needs openssl@3
        run: brew unlink openssl
      - name: "Build rubyc"
        run: bin/rubyc bin/rubyc -o rubyc --openssl-dir=$(brew --prefix openssl@1.1)
      - name: "Package rubyc"
        run: |
          mkdir -p pkg
          RUBYC_FILENAME=rubyc-$(uname -s)-$(uname -m)
          RUBYC_ARCHIVE_FILENAME=${RUBYC_FILENAME}.tar.gz
          cp rubyc pkg/rubyc-$(uname -s)-$(uname -m)
          cd pkg
          gzip $RUBYC_FILENAME -c > $RUBYC_ARCHIVE_FILENAME
          echo "RUBYC_FILENAME=$RUBYC_FILENAME" >> $GITHUB_ENV
          echo "RUBYC_ARCHIVE_FILENAME=$RUBYC_ARCHIVE_FILENAME" >> $GITHUB_ENV
          ls -l
          if [[ $GITHUB_BRANCH == $PUBLISH_BRANCH ]]; then
            gh release upload "${NEXT_TAG}" $RUBYC_ARCHIVE_FILENAME --repo "${REPO}" --clobber
          else
            echo "Not on $PUBLISH_BRANCH branch, skipping upload"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "[Enclose.IO] Create MacOS Test run upload"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.env.RUBYC_FILENAME }}
          path: pkg/${{ github.env.RUBYC_FILENAME }}
