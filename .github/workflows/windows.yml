name: Windows
on:
  push:
    branches: [ master, ci_test ]
  pull_request:
    branches: [ master, ci_test  ]
  workflow_dispatch:
jobs:
  make:
    strategy:
      matrix:
        # ruby: ['2.4','2.6','2.7', '3.0', '3.1', '3.2']
        ruby: ['3.2']
        vs: [2019]
        os: [windows-2019]
        # include:
        #   - os: windows-2019
        #     vs: 2019
      fail-fast: false
    runs-on: windows-2019
    env:
      ENCLOSE_IO_RUBYC_ADDTIONAL_ARGS: --tmpdir=C:\rubyc_tmp
    steps:
      - uses: ilammy/setup-nasm@v1
      - uses: actions/checkout@v3
      - name: "allow add-path"
        run: |
          echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - name: "[Enclose.IO] Install libraries"
        run: |
          choco install --no-progress squashfs
      - name: "[Enclose.IO] Set up Ruby"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: "[Enclose.IO] Install rubocop"
        run: gem install rubocop
      - name: "[Enclose.IO] Run rubocop"
        run: rubocop
      - name: "[Enclose.IO] Install dependencies"
        run: bundle install
      # - name: "[Enclose.IO] Set up Perl"
      #   run: |
      #     choco install strawberryperl
      #     echo "##[add-path]C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin"
      - name: "[Enclose.IO] Inspect Windows Environment"
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          echo on
          wmic OS get OSArchitecture
          echo %PROCESSOR_ARCHITECTURE%
          set
          systeminfo
          where perl
          perl -V
          where nmake
          where mksquashfs
          mksquashfs -version
          where ruby
          ruby -v
          where bundle
          bundle -v
        shell: cmd
      # - name: "[Enclose.IO] Rake"
      #   run: |
      #     call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      #     mkdir C:\rubyc_tmp
      #     bundle exec rake
      #   shell: cmd
      - name: "Install bundle"
        run: bundle install
      - name: "Download and Patch ruby source"
        run: bundle exec rake patch_ruby_source
      - name: "Package rubyc"
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          mkdir C:\rubyc_tmp
          bundle exec rake rubyc.exe
        shell: cmd
      - name: "Package rubyc"
        run: |
          mkdir -p pkg
          export RUBYC_FILENAME=rubyc-$(uname -s)-$(uname -m).exe
          export RUBYC_ARCHIVE_FILENAME=${RUBYC_FILENAME}.tar.gz
          cp rubyc.exe pkg/$RUBYC_FILENAME
          cd pkg
          tar -czvf $RUBYC_ARCHIVE_FILENAME $RUBYC_FILENAME
          echo "RUBYC_FILENAME=$RUBYC_FILENAME" >> $GITHUB_ENV
          echo "RUBYC_ARCHIVE_FILENAME=$RUBYC_ARCHIVE_FILENAME" >> $GITHUB_ENV
          ls -l
          if [[ $GITHUB_REF == "refs/heads/$PUBLISH_BRANCH" ]]; then
            gh release upload "${NEXT_TAG}" $RUBYC_ARCHIVE_FILENAME --repo "${REPO}" --clobber
          else
            echo "Not on $PUBLISH_BRANCH branch, skipping upload"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "[Enclose.IO] Create Windows Test run upload"
        uses: actions/upload-artifact@v3
        with:
          name: rubyc ${{ matrix.os }} ${{ matrix.ruby }}
          path: pkg/${{ github.env.RUBYC_ARCHIVE_FILENAME }}
